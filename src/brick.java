import java.awt.Component;
import java.awt.Graphics;
import java.awt.Rectangle;

import javax.swing.ImageIcon;

public class brick {
	int map_bricksXPos[][] = {
			{ 50, 350, 450, 550, 50, 300, 350, 450, 550, 150, 150, 450, 600, 250, 50, 100, 150, 550, 250, 350, 450, 550,
					50, 250, 350, 550, 50, 150, 250, 300, 350, 550, 50, 150, 250, 350, 450, 550, 50, 250, 350, 550 },
			{ 0, 0, 50, 50, 50, 50, 50, 50, 100, 150, 150, 150, 200, 250, 250, 250, 300, 300, 300, 350, 350, 350, 350,
					450, 450, 450, 450, 450, 450, 500, 500, 500, 550, 550, 550, 550, 600 },
			{ 50, 50, 50, 50, 50, 50, 50, 100, 100, 100, 100, 100, 150, 150, 200, 200, 200, 200, 250, 250, 250, 300,
					300, 300, 350, 350, 350, 400, 450, 450, 450, 450, 450, 450, 450, 500, 550, 550, 550, 550, 550,
					600 },
			{ 0, 0, 0, 100, 150, 150, 150, 150, 150, 150, 200, 250, 250, 250, 250, 300, 300, 300, 350, 350, 400, 450,
					450, 450, 500, 500, 500, 550, 550, 550, 550, 600, 600, 600 },
			{ 50, 50, 50, 50, 50, 50, 50, 100, 150, 150, 150, 150, 150, 150, 200, 200, 250, 250, 250, 250, 250, 300,
					300, 300, 350, 350, 350, 350, 350, 400, 400, 450, 450, 450, 450, 450, 450, 500, 550, 550, 550,
					550 },
			{ 50, 50, 50, 50, 100, 150, 150, 150, 150, 250, 250, 250, 250, 300, 300, 300, 300, 350, 350, 350, 350, 450,
					450, 450, 450, 450, 450, 450, 550, 550, 550, 550, 550, 550 },
			{ 0, 0, 0, 50, 50, 50, 50, 100, 100, 100, 100, 150, 150, 150, 150, 150, 200, 250, 250, 250, 250, 250, 300,
					300, 300, 300, 300, 300, 350, 350, 350, 350, 400, 400, 400, 450, 450, 450, 450, 450, 500, 550, 550,
					550, 550, 550, 550, 550, 600, 600, 600 },
			{ 0, 50, 50, 50, 50, 100, 100, 100, 100, 100, 100, 150, 150, 150, 200, 200, 200, 200, 200, 200, 250, 250,
					250, 250, 250, 300, 300, 300, 350, 350, 350, 350, 350, 400, 400, 400, 400, 400, 400, 450, 450, 450,
					500, 500, 500, 500, 500, 500, 550, 550, 550, 600 },
			{},
			{ 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 100, 100, 100, 100, 150, 150, 150, 150, 150, 150, 200, 200,
					200, 200, 200, 250, 250, 250, 250, 250, 250, 250, 250, 300, 300, 300, 300, 300, 300, 300, 350, 350,
					350, 350, 350, 350, 350, 400, 400, 400, 400, 400, 400, 450, 450, 450, 450, 500, 500, 500, 500, 500,
					500, 500, 500, 550, 550, 550, 600, 600, 600, 600, 600, 600, 600, 600, 600 },

	};
	int map_bricksYPos[][] = {
			{ 50, 50, 50, 50, 100, 100, 100, 100, 100, 150, 200, 200, 200, 250, 300, 300, 300, 300, 350, 350, 350, 350,
					400, 400, 400, 400, 450, 450, 450, 450, 450, 450, 500, 500, 500, 500, 500, 500, 550, 550, 550,
					550 },
			{ 200, 250, 100, 300, 400, 450, 500, 550, 300, 200, 350, 450, 50, 200, 250, 350, 0, 350, 400, 0, 250, 300,
					350, 0, 50, 250, 300, 400, 500, 150, 250, 500, 50, 100, 400, 500, 200 },
			{ 150, 200, 300, 350, 400, 450, 500, 0, 300, 350, 400, 500, 0, 50, 100, 200, 300, 400, 0, 100, 400, 0, 50,
					200, 250, 300, 400, 400, 50, 100, 150, 300, 400, 450, 500, 50, 50, 150, 200, 250, 550, 150 },
			{ 150, 200, 550, 150, 100, 150, 250, 350, 400, 450, 50, 50, 200, 250, 450, 50, 300, 450, 50, 450, 100, 150,
					250, 450, 250, 300, 400, 50, 150, 250, 550, 400, 450, 500 },
			{ 100, 150, 350, 400, 450, 500, 550, 50, 100, 200, 350, 400, 450, 500, 100, 200, 100, 250, 300, 350, 550,
					350, 400, 500, 100, 250, 300, 350, 550, 100, 200, 100, 200, 350, 400, 450, 500, 50, 200, 350, 400,
					500 },
			{ 100, 150, 400, 450, 300, 150, 200, 400, 450, 200, 250, 400, 450, 250, 400, 450, 500, 200, 250, 400, 450,
					100, 150, 200, 250, 350, 400, 450, 100, 150, 250, 350, 500, 550 },
			{ 0, 50, 300, 0, 50, 200, 400, 0, 50, 400, 500, 100, 200, 250, 300, 400, 200, 0, 50, 450, 500, 550, 50, 150,
					200, 250, 450, 500, 50, 450, 500, 550, 0, 50, 100, 100, 250, 300, 400, 500, 200, 0, 50, 100, 200,
					300, 400, 500, 0, 50, 100 },
			{ 500, 50, 100, 150, 500, 50, 150, 200, 250, 300, 500, 50, 350, 500, 50, 150, 200, 250, 300, 350, 50, 100,
					400, 500, 550, 250, 300, 500, 50, 100, 400, 500, 550, 50, 150, 200, 250, 300, 350, 50, 350, 500, 50,
					150, 200, 250, 300, 500, 50, 150, 500, 500 },
			{},
			{ 300, 450, 50, 100, 150, 200, 300, 350, 400, 450, 500, 550, 300, 400, 500, 550, 50, 100, 150, 200, 300,
					400, 50, 100, 300, 400, 450, 100, 150, 200, 250, 300, 450, 500, 550, 0, 100, 150, 200, 450, 500,
					550, 100, 300, 350, 400, 450, 500, 550, 0, 100, 150, 200, 250, 300, 300, 400, 450, 500, 0, 100, 150,
					200, 300, 400, 450, 500, 100, 200, 300, 100, 200, 250, 300, 350, 400, 450, 500, 550 },

	};

	int map_solidBricksXPos[][] = { { 150, 350, 150, 500, 450, 300, 600, 400, 350, 200, 0, 200, 500 },
			{ 0, 50, 150, 150, 150, 250, 250, 300, 300, 350, 350, 350, 400, 450, 500, 600, 50, 150, 250, 150, 150, 250,
					250, 350, 550, 550 },
			{ 0, 0, 50, 150, 250, 300, 300, 300, 300, 300, 350, 400, 550, 550, 550, 550, 550, 50, 100, 150, 150, 250,
					200, 350, 400, 450, 450 },
			{ 0, 0, 50, 50, 100, 150, 200, 250, 250, 300, 300, 300, 300, 400, 400, 400, 500, 500, 600, 600, 600, 600,
					50, 50, 100, 150, 400, 400, 500, 500, 500, 500 },
			{ 50, 50, 150, 250, 300, 300, 300, 300, 350, 450, 550, 550, 550, 50, 150, 250, 250, 350, 350, 450, 550,
					550 },
			{ 0, 50, 150, 250, 300, 350, 450, 500, 550, 550, 550, 550, 600, 50, 50, 150, 150, 150, 250, 250, 250, 250,
					350, 350, 350, 350, 450, 450, 450 },
			{ 0, 50, 100, 100, 100, 150, 250, 300, 350, 400, 450, 450, 500, 50, 250, 300, 350, 500, 500 },
			{ 0, 100, 150, 150, 150, 150, 150, 200, 300, 300, 300, 400, 450, 450, 450, 450, 450, 500, 600, 100, 100,
					250, 350, 500, 500, 550 },
			{ 50, 50, 50, 50, 50, 50, 50, 100, 100, 100, 100, 150, 150, 150, 150, 200, 200, 200, 200, 200, 200, 200,
					250, 250, 250, 300, 300, 300, 300, 300, 300, 300, 300, 300, 350, 350, 400, 400, 400, 400, 400, 400,
					450, 450, 450, 450, 500, 500, 500, 500, 500, 500, 550, 550, 550, 600, 600, 600, 600, 600 },
			{},
	};

	int map_solidBricksYPos[][] = { { 0, 0, 50, 100, 150, 200, 200, 250, 300, 350, 400, 400, 450 },
			{ 400, 250, 0, 50, 550, 500, 550, 100, 500, 200, 500, 550, 150, 150, 400, 450, 50, 150, 150, 400, 300, 300,
					400, 400, 250, 350 },
			{ 200, 500, 0, 100, 200, 100, 400, 450, 500, 550, 350, 450, 100, 300, 400, 450, 500, 100, 450, 200, 300,
					300, 450, 200, 50, 200, 300 },
			{ 250, 350, 0, 50, 550, 50, 450, 150, 300, 150, 350, 500, 550, 50, 250, 450, 0, 450, 50, 250, 350, 550, 350,
					450, 250, 300, 150, 350, 50, 150, 350, 550 },
			{ 200, 300, 50, 200, 0, 50, 100, 550, 200, 50, 250, 300, 450, 50, 300, 400, 500, 400, 500, 300, 50, 150 },
			{ 300, 500, 100, 50, 50, 50, 500, 300, 50, 200, 300, 450, 450, 50, 200, 50, 300, 500, 150, 300, 500, 550,
					150, 300, 500, 550, 300, 500, 50 },
			{ 100, 100, 100, 200, 300, 500, 300, 300, 300, 200, 50, 200, 300, 500, 400, 400, 400, 400, 500 },
			{ 400, 100, 100, 150, 200, 250, 300, 100, 350, 400, 450, 100, 100, 150, 200, 250, 300, 100, 400, 350, 450,
					150, 150, 350, 450, 100 },
			{ 50, 150, 200, 250, 300, 400, 500, 50, 300, 400, 500, 50, 150, 200, 500, 50, 150, 200, 300, 350, 400, 500,
					150, 500, 550, 0, 50, 100, 150, 250, 300, 400, 450, 500, 400, 500, 50, 100, 150, 250, 300, 400, 300,
					400, 500, 550, 50, 100, 150, 200, 300, 400, 100, 150, 500, 250, 300, 400, 450, 500 },
			{},
	};

	int map_speedUpXPos[][] = {
			{},
			{ 50, 100, 100, 300, 350, 400, 400, 400, 600 },
			{ 0, 0, 200, 250, 300, 500, 500, 500, 500, 500 },
			{ 100, 100, 100, 100150, 200, 250, 250, 250, 300, 300, 300, 350, 500, 550, 550, 550, 550 },
			{ 0, 0, 0, 0, 0, 100, 100, 150, 200, 400, 400, 400, 400, 450, 600, 600 },
			{ 0, 0, 0, 100, 100, 100, 100, 200, 200, 250, 300, 350, 400, 400, 500, 500, 500, 500, 600, 600 },
			{ 100, 150, 200, 200, 200, 250, 250, 250, 350, 350, 350, 400, 400, 400, 500, 500, 600, 600, 600 },
			{ 50, 50, 50, 50, 100, 100, 150, 150, 200, 250, 250, 250, 350, 350, 350, 400, 450, 500, 550, 550, 550 },
			{},
			{}
	};

	int map_speedUpYPos[][] = {
			{},
			{ 350, 150, 200, 50, 50, 250, 300, 350, 300 },
			{ 350, 400, 150, 150, 150, 0, 150, 200, 400, 450 },
			{ 200, 350, 400, 450, 200, 0, 0, 100, 400, 0, 100, 400, 0, 200, 200, 350, 400, 450 },
			{ 100, 150, 350, 400, 450, 350, 400, 150, 150, 150, 300, 350, 400, 150, 350, 400 },
			{ 100, 150, 200, 150, 200, 400, 450, 400, 450, 350, 350, 350, 400, 400, 100, 150, 450, 500, 100, 150 },
			{ 350, 350, 400, 450, 500, 150, 200, 250, 150, 200, 250, 400, 450, 500, 50, 100, 200, 250, 300 },
			{ 0, 250, 300, 550, 0, 550, 0, 550, 0, 0, 250, 300, 0, 250, 300, 0, 0, 0, 0, 250, 300 },
			{},
			{}
	};

	int map_speedDownXPos[][] = {
			{},
			{ 200, 200, 200, 250, 350, 350, 450, 550 },
			{ 50, 150, 150, 250, 400, 500, 600, 600, 600 },
			{ 0, 50, 50, 100, 200, 350, 350, 400, 400, 400, 450, 450, 500, 500, 600 },
			{ 50, 50, 100, 250, 250, 450, 500, 550 },
			{ 100, 100, 200, 200, 200, 250, 350, 400, 400, 400, 500, 550 },
			{ 0, 100, 250, 300, 350, 450, 450 },
			{ 100, 300, 500 },
			{},
			{}
	};

	int map_speedDownYPos[][] = {
			{},
			{ 150, 300, 400, 450, 150, 450, 200, 300 },
			{ 50, 250, 450, 250, 200, 300, 400, 450, 500 },
			{ 450, 250, 400, 50, 300, 150, 350, 200, 300, 400, 50, 350, 100, 500, 300 },
			{ 0, 250, 300, 450, 450, 0, 300, 100 },
			{ 50, 500, 50, 300, 500, 100, 100, 50, 300, 500, 50, 0 },
			{ 500, 150, 350, 350, 350, 350, 450 },
			{ 400, 150, 400 },
			{},
			{}
	};

	// int map_spawnBotXPos[][] = {
	// {0,250,500,600},
	// {0,0,300,600},
	// {0,0,600,600},
	// {0,0,450,450,600},
	// {0,200,250,300,350,400},
	// {0,0,300,300,500},
	// {100,150,150,450,500},
	// {0,0,250,350,450,600},
	// {0,250,550,600,600},
	// {0,350,550,600},
	// };

	// int map_spawnBotYPos[][] = {
	// {0,0,50,550},
	// {0,300,300,0},
	// {150,450,0,200},
	// {0,300,300,400,150},
	// {500,50,50,300,50,50},
	// {0,450,200,300,250},
	// {250,0,50,0,250},
	// {0,450,350,350,0,450},
	// {0,0,50,350,550},
	// {0,0,250,0},
	// };

	int random_value = (int) (Math.random() * 8);

	int[] bricksXPos = map_bricksXPos[random_value];
	int[] bricksYPos = map_bricksYPos[random_value];
	int[] solidBricksXPos = map_solidBricksXPos[random_value];
	int[] solidBricksYPos = map_solidBricksYPos[random_value];
	int[] speedUpXpos = map_speedUpXPos[random_value];
	int[] speedUpYpos = map_speedUpYPos[random_value];
	int[] speedDownXpos = map_speedDownXPos[random_value];
	int[] speedDownYpos = map_speedDownYPos[random_value];

	int brickON[] = new int[bricksXPos.length];

	private ImageIcon breakBrickImage;
	private ImageIcon solidBrickImage;
	private ImageIcon speedUpImage;
	private ImageIcon speedDownImage;

	public brick() {
		speedDownImage = new ImageIcon("slowz.jpg");
		speedUpImage = new ImageIcon("speed.png");
		breakBrickImage = new ImageIcon("break_brick.jpg");
		solidBrickImage = new ImageIcon("solid_brick.jpg");

		for (int i = 0; i < brickON.length; i++) {
			brickON[i] = 1;
		}
	}

	public void draw(Component c, Graphics g) {
		for (int i = 0; i < brickON.length; i++) {
			if (brickON[i] == 1) {
				breakBrickImage.paintIcon(c, g, bricksXPos[i], bricksYPos[i]);
			}
		}
	}

	public void drawSolids(Component c, Graphics g) {
		for (int i = 0; i < solidBricksXPos.length; i++) {
			solidBrickImage.paintIcon(c, g, solidBricksXPos[i], solidBricksYPos[i]);
		}
		for (int i = 0; i < speedUpXpos.length; i++) {
			speedUpImage.paintIcon(c, g, speedUpXpos[i], speedUpYpos[i]);
		}
		for (int i = 0; i < speedDownXpos.length; i++) {
			speedDownImage.paintIcon(c, g, speedDownXpos[i], speedDownYpos[i]);
		}
	}

	public boolean checkCollision(int x, int y) {
		boolean collided = false;
		for (int i = 0; i < brickON.length; i++) {
			if (brickON[i] == 1) {
				if (new Rectangle(x, y, 10, 10).intersects(new Rectangle(bricksXPos[i], bricksYPos[i], 50, 50))) {
					brickON[i] = 0;
					collided = true;
					break;
				}
			}
		}

		return collided;
	}

	public boolean checkSolidCollision(int x, int y) {
		boolean collided = false;
		for (int i = 0; i < solidBricksXPos.length; i++) {
			if (new Rectangle(x, y, 10, 10).intersects(new Rectangle(solidBricksXPos[i], solidBricksYPos[i], 50, 50))) {
				collided = true;
				break;
			}
		}

		return collided;
	}

	public boolean checkTankCollision(int x, int y) {
		boolean collided = false;
		for (int i = 0; i < solidBricksXPos.length; i++) {
			if (new Rectangle(x + 5, y + 5, 40, 40)
					.intersects(new Rectangle(solidBricksXPos[i], solidBricksYPos[i], 50, 50))) {
				collided = true;
				break;
			}
		}

		for (int i = 0; i < brickON.length; i++) {
			if (brickON[i] == 1) {
				if (new Rectangle(x + 5, y + 5, 40, 40)
						.intersects(new Rectangle(bricksXPos[i], bricksYPos[i], 50, 50))) {
					collided = true;
					break;
				}
			}
		}

		return collided;
	}

	public boolean checkcrash(int x, int y) {
		boolean crashed = false;

		for (int i = 0; i < solidBricksXPos.length; i++) {
			if (new Rectangle(x, y, 40, 40).intersects(new Rectangle(solidBricksXPos[i], solidBricksYPos[i], 50, 50))) {
				crashed = true;
				break;
			}
		}

		for (int i = 0; i < bricksXPos.length; i++) {
			if (brickON[i] == 1) {
				if (new Rectangle(x, y, 40, 40).intersects(new Rectangle(bricksXPos[i], bricksYPos[i], 50, 50))) {
					crashed = true;
					break;
				}
			}
		}

		return crashed;
	}

	public boolean checkspeedup(int x, int y) {
		boolean speedup = false;

		for (int i = 0; i < speedUpXpos.length; i++) {
			if (new Rectangle(x, y, 50, 50).intersects(new Rectangle(speedUpXpos[i], speedUpYpos[i], 45, 45))) {
				speedup = true;
				break;
			}
		}
		return speedup;
	}

	public boolean checkspeeddown(int x, int y) {
		boolean speeddown = false;

		for (int i = 0; i < speedDownXpos.length; i++) {
			if (new Rectangle(x, y, 50, 50).intersects(new Rectangle(speedDownXpos[i], speedDownYpos[i], 45, 45))) {
				speeddown = true;
				break;
			}
		}
		return speeddown;
	}
}
